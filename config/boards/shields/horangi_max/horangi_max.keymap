#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <175>;
};

&lt {
    tapping-term-ms = <175>;
};

/
{

    leds {
        compatible = "gpio-leds";
        user_led: led_0 {
            gpios = <&gpio0 15 GPIO_ACTIVE_HIGH>;
            label = "User LED";
        };
    };

    aliases {
        indicator-led = &user_led;
    };

    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_RALT)>;
            keep-mods = <(MOD_RSFT)>;
        };
        ht_tp: holdtap_tappreferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <175>;
            quick-tap-ms = <155>;
            bindings = <&kp>, <&kp>;
        };
        ht_hp: holdtap_holdpreferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <175>;
            quick-tap-ms = <155>;
            bindings = <&kp>, <&kp>;
        };
        ht_bl: holdtap_balanced {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <175>;
            quick-tap-ms = <155>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 1>;
        };
        
        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 2>;
        };

        select_usb: usb_profile_macro {
            label = "SELECT_USB";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_USB>
                , <&macro_wait_time 1000>
                , <&bt BT_DISC 0>
                , <&macro_wait_time 1000>
                , <&bt BT_DISC 1>
                , <&macro_wait_time 1000>
                , <&bt BT_DISC 2>;
        };

        bt_0_clr: bt_profile_macro_0_clr {
            label = "BT_0_CLR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 0>
                , <&macro_wait_time 1000>
                , <&bt BT_CLR>;
        };

        bt_1_clr: bt_profile_macro_1_clr {
            label = "BT_1_CLR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 1>
                , <&macro_wait_time 1000>
                , <&bt BT_CLR>;
        };

        bt_2_clr: bt_profile_macro_2_clr {
            label = "BT_2_CLR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 2>
                , <&macro_wait_time 1000>
                , <&bt BT_CLR>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&gresc      &kp N1  &kp N2   &kp N3   &kp N4      &kp N5                                &kp N6  &kp N7   &kp N8     &kp N9  &kp N0      &kp DEL
&kp TAB     &kp Q   &kp W    &kp E    &kp R       &kp T                                 &kp Y   &kp U    &kp I      &kp O   &kp P       &kp EQUAL   &kp HOME &kp PG_UP
&mt LGUI MINUS &kp A &kp S   &kp D    &kp F       &kp G    &kp LBKT         &bt_0       &kp H   &kp J    &kp K      &kp L   &kp SEMI    &kp SQT     &kp END  &kp PG_DN
&kp LSHFT   &kp Z   &kp X    &kp C    &kp V       &kp B    &kp RBKT        &out OUT_USB &kp N   &kp M    &kp COMMA  &kp DOT &kp FSLH    &kp RSHFT   &kp UP
                             &kp RCTRL &kp LALT &lt 2 SPACE &ht_hp LCTRL BSPC &kp ENTER  &lt 1 SPACE &kp RALT  &kp BSLH                 &kp LEFT    &kp DOWN &kp RIGHT
            >;
        };

        lower_layer {
            bindings = <
&trans      &trans  &trans   &trans   &trans      &trans                                &trans  &trans   &trans     &trans  &trans      &trans
&trans      &trans  &trans   &trans   &trans      &trans                                &trans  &trans   &kp UP     &trans  &trans      &trans      &trans   &trans
&trans      &trans  &trans   &trans   &trans      &trans   &trans           &trans      &kp HOME &kp LEFT &kp DOWN  &kp RIGHT &trans    &trans      &trans   &trans
&trans      &trans  &trans   &trans   &trans      &trans   &trans           &trans      &kp END &trans   &kp PG_UP  &kp PG_DN &trans    &trans      &trans
                             &trans   &trans      &trans   &trans           &trans      &trans  &trans   &trans                              &trans &trans   &trans
            >;
        };

        raise_layer {
            bindings = <
&trans      &kp F1  &kp F2   &kp F3   &kp F4      &kp F5                                &kp F6  &kp F7   &kp F8     &kp F9  &kp F10     &kp F11
&trans      &trans  &trans   &trans   &trans      &trans                                &trans  &trans   &trans     &trans  &trans      &kp F12     &trans   &trans
&trans      &trans  &trans   &trans   &trans      &trans   &bt_1            &bt_0_clr   &trans  &trans   &trans     &trans  &trans      &trans      &trans   &trans
&trans      &trans  &trans   &trans   &trans      &trans   &bt_1_clr        &trans      &trans  &trans   &trans     &trans  &trans      &trans      &trans
                             &trans   &trans      &trans   &trans           &trans      &trans  &trans   &trans                         &trans      &trans   &trans
            >;
        };

        adjust_layer {
            bindings = <
&trans      &trans  &trans   &trans   &trans      &trans                                &trans  &trans   &trans     &trans  &trans      &trans
&trans      &trans  &trans   &trans   &trans      &trans                                &trans  &trans   &trans     &trans  &trans      &trans      &trans   &trans
&trans      &trans  &trans   &trans   &trans      &trans   &trans           &trans      &trans  &trans   &trans     &trans  &trans      &trans      &trans   &trans
&trans      &trans  &trans   &trans   &trans      &trans   &trans           &trans      &trans  &trans   &trans     &trans  &trans      &trans      &trans
                             &trans   &trans      &trans   &trans           &trans      &trans  &trans   &trans                              &trans &trans   &trans
            >;

        };
        
    };
};
